/**
 * üîí CONFIGURA√á√ÉO SEGURA DA OPENAI
 * Helper para usar a API apenas quando a chave estiver dispon√≠vel
 *
 * SEGURAN√áA:
 * - Chave nunca exposta no frontend
 * - Valida√ß√£o rigorosa de configura√ß√£o
 * - Fallback gracioso quando n√£o configurada
 */

// Lista de chaves inv√°lidas/placeholder
const INVALID_KEYS = [
  'sua_chave_openai_aqui',
  'sk-proj-sua_chave_openai_real_aqui',
  'your-openai-key',
  'sk-your-openai-key',
  ''
]

// Verifica se a chave OpenAI est√° configurada corretamente
export function isOpenAIConfigured(): boolean {
  const key = process.env.OPENAI_API_KEY

  if (!key) return false
  if (INVALID_KEYS.includes(key)) return false
  if (!key.startsWith('sk-')) return false
  if (key.length < 20) return false

  return true
}

// Obt√©m a chave OpenAI de forma segura (apenas server-side)
export function getOpenAIKey(): string | null {
  // ‚ö†Ô∏è SEGURAN√áA: Nunca executar no cliente
  if (typeof window !== 'undefined') {
    console.error('üö® ERRO DE SEGURAN√áA: getOpenAIKey() chamado no cliente!')
    return null
  }

  const key = process.env.OPENAI_API_KEY

  if (!key || INVALID_KEYS.includes(key)) {
    console.warn('‚ö†Ô∏è Chave OpenAI n√£o configurada - funcionalidades de IA desabilitadas')
    return null
  }

  if (!key.startsWith('sk-')) {
    console.error('‚ùå Chave OpenAI inv√°lida - deve come√ßar com "sk-"')
    return null
  }

  return key
}

// Configura√ß√£o para usar nos hooks/componentes (sem expor a chave)
export const openAIConfig = {
  isConfigured: isOpenAIConfigured(),

  // ‚ö†Ô∏è SEGURAN√áA: Nunca expor a chave real
  getApiKey: () => {
    if (typeof window !== 'undefined') {
      throw new Error('üö® ERRO DE SEGURAN√áA: Tentativa de acessar chave OpenAI no cliente!')
    }
    return getOpenAIKey()
  },

  // Helper para mostrar mensagem quando n√£o configurado
  getErrorMessage: () => 'Chave OpenAI n√£o configurada. Configure OPENAI_API_KEY no arquivo .env.local para usar funcionalidades de IA.',

  // Status para componentes
  getStatus: () => ({
    configured: isOpenAIConfigured(),
    message: isOpenAIConfigured()
      ? '‚úÖ OpenAI configurado e pronto para uso'
      : '‚ö†Ô∏è OpenAI n√£o configurado - funcionalidades de IA desabilitadas'
  })
}

// Log do status na inicializa√ß√£o (apenas no servidor)
if (typeof window === 'undefined') {
  const status = openAIConfig.getStatus()
  console.log(status.message)

  if (!openAIConfig.isConfigured) {
    console.log('üí° Para habilitar: configure OPENAI_API_KEY no arquivo .env.local')
    console.log('üîó Obtenha sua chave em: https://platform.openai.com/api-keys')
  }
}