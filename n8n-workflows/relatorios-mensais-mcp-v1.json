{
  "name": "Relatórios Mensais MCP v1",
  "active": false,
  "nodes": [
    {
      "parameters": {
        "triggerTimes": {
          "item": [
            {
              "mode": "everyMonth",
              "day": 1,
              "hour": 9,
              "minute": 0
            }
          ]
        }
      },
      "id": "trigger-mensal",
      "name": "Trigger Mensal Dia 1",
      "type": "n8n-nodes-base.cron",
      "typeVersion": 1,
      "position": [240, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT \n  e.id,\n  e.nome,\n  e.cnpj,\n  e.regime_tributario,\n  e.email_contato,\n  e.telefone,\n  u.email as contador_email,\n  u.raw_user_meta_data->>'full_name' as contador_nome\nFROM empresas e \nJOIN auth.users u ON e.user_id = u.id \nWHERE e.status = 'ativa' \nORDER BY e.nome\nLIMIT 100",
        "options": {
          "queryBatching": "independently"
        }
      },
      "id": "buscar-empresas",
      "name": "Buscar Empresas Ativas",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [460, 300],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Gerar dados do relatório mensal\nconst items = $input.all();\n\nif (!items || items.length === 0) {\n  console.log('Nenhuma empresa ativa encontrada');\n  return [];\n}\n\nconst mesPassado = new Date();\nmesPassado.setMonth(mesPassado.getMonth() - 1);\nconst mesReferencia = mesPassado.toLocaleDateString('pt-BR', { year: 'numeric', month: 'long' });\nconst anoMes = mesPassado.toISOString().slice(0, 7);\n\nconst relatoriosGerados = [];\n\nfor (const item of items) {\n  try {\n    const empresa = item.json;\n    \n    // Validar dados essenciais\n    if (!empresa.id || !empresa.nome) {\n      console.warn('Empresa com dados incompletos:', empresa.id);\n      continue;\n    }\n    \n    // Simular dados do relatório (em produção, viria do banco)\n    const faturamentoMes = Math.random() * 50000 + 10000;\n    const dasValor = faturamentoMes * 0.06;\n    const aliquotaEfetiva = 6.0 + (Math.random() * 2);\n    \n    // Personalizar por regime tributário\n    let dadosEspecificos = {};\n    let proximosVencimentos = [];\n    \n    switch(empresa.regime_tributario) {\n      case 'Simples Nacional':\n        dadosEspecificos = {\n          faturamento_mes: faturamentoMes,\n          das_valor: dasValor,\n          aliquota_efetiva: aliquotaEfetiva,\n          anexo_simples: 'Anexo I',\n          faturamento_acumulado: faturamentoMes * 12 * 0.8\n        };\n        proximosVencimentos = [\n          { tipo: 'DAS', vencimento: '20/02/2025', valor: dasValor },\n          { tipo: 'DEFIS', vencimento: '31/03/2025', valor: 0 }\n        ];\n        break;\n        \n      case 'Lucro Presumido':\n        const receitaTrimestre = faturamentoMes * 3;\n        const irpj = receitaTrimestre * 0.08 * 0.15;\n        const csll = receitaTrimestre * 0.08 * 0.09;\n        \n        dadosEspecificos = {\n          receita_trimestre: receitaTrimestre,\n          irpj: irpj,\n          csll: csll,\n          total_tributos: irpj + csll,\n          percentual_presuncao: 8.0\n        };\n        proximosVencimentos = [\n          { tipo: 'IRPJ', vencimento: '31/01/2025', valor: irpj },\n          { tipo: 'CSLL', vencimento: '31/01/2025', valor: csll }\n        ];\n        break;\n        \n      default:\n        dadosEspecificos = {\n          faturamento_mes: faturamentoMes,\n          observacao: `Relatório personalizado para ${empresa.regime_tributario} em desenvolvimento`\n        };\n        proximosVencimentos = [\n          { tipo: 'Consultar', vencimento: 'A definir', valor: 0 }\n        ];\n    }\n    \n    const relatorio = {\n      ...empresa,\n      relatorio: {\n        mes_referencia: mesReferencia,\n        ano_mes: anoMes,\n        ...dadosEspecificos,\n        proximos_vencimentos: proximosVencimentos,\n        gerado_em: new Date().toISOString(),\n        destinatario: empresa.email_contato || empresa.contador_email || 'email@exemplo.com'\n      }\n    };\n    \n    relatoriosGerados.push({ json: relatorio });\n    \n  } catch (error) {\n    console.error('Erro ao gerar relatório para empresa:', error.message);\n    continue;\n  }\n}\n\nconsole.log(`Gerados ${relatoriosGerados.length} relatórios`);\nreturn relatoriosGerados;"
      },
      "id": "gerar-relatorio",
      "name": "Gerar Dados do Relatório",
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [680, 300],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "send",
        "fromEmail": "relatorios@contabilidadepro.com",
        "toEmail": "={{ $json.relatorio.destinatario }}",
        "subject": "📊 Relatório Mensal - {{ $json.nome }} - {{ $json.relatorio.mes_referencia }}",
        "html": "=<div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; background: white; border-radius: 8px; overflow: hidden; box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\">\n  <div style=\"background: #2563eb; color: white; padding: 30px 20px; text-align: center;\">\n    <h1 style=\"margin: 0; font-size: 24px; font-weight: 600;\">ContabilidadePRO</h1>\n    <p style=\"margin: 5px 0 0 0; opacity: 0.9;\">Relatório Automático Mensal</p>\n  </div>\n  \n  <div style=\"padding: 30px 20px;\">\n    <h2 style=\"color: #1f2937; margin-top: 0;\">Olá!</h2>\n    <p>Aqui está o resumo fiscal da <strong>{{ $json.nome }}</strong> referente a <strong>{{ $json.relatorio.mes_referencia }}</strong>.</p>\n    \n    <div style=\"background: #f0fdf4; padding: 20px; border-radius: 8px; margin: 20px 0; border-left: 4px solid #059669;\">\n      <h3 style=\"color: #059669; margin-top: 0;\">📈 Resumo Fiscal</h3>\n      <p><strong>Regime Tributário:</strong> {{ $json.regime_tributario }}</p>\n      <p><strong>CNPJ:</strong> {{ $json.cnpj }}</p>\n    </div>\n    \n    <div style=\"background: #fffbeb; padding: 20px; border-radius: 8px; border-left: 4px solid #f59e0b; margin: 20px 0;\">\n      <h4 style=\"color: #92400e; margin-top: 0;\">🎯 Próximas Ações Recomendadas:</h4>\n      <ul style=\"margin: 10px 0; padding-left: 20px; color: #92400e;\">\n        <li>Verificar documentos pendentes de entrega</li>\n        <li>Preparar pagamento dos tributos em aberto</li>\n        <li>Revisar lançamentos contábeis do mês</li>\n        <li>Organizar documentação para o próximo período</li>\n      </ul>\n    </div>\n    \n    <p><strong>Dúvidas ou esclarecimentos?</strong><br>\n    Responda este email ou entre em contato conosco. Estamos aqui para ajudar!</p>\n    \n    <p style=\"margin-top: 30px;\">Atenciosamente,<br>\n    <strong>{{ $json.contador_nome || 'Equipe ContabilidadePRO' }}</strong></p>\n  </div>\n  \n  <div style=\"background: #f3f4f6; padding: 20px; text-align: center; border-top: 1px solid #e5e7eb;\">\n    <p style=\"margin: 0; font-size: 12px; color: #6b7280;\">\n      Este é um relatório automático gerado pelo ContabilidadePRO<br>\n      Sistema de Inteligência Fiscal Autônoma\n    </p>\n    <p style=\"margin: 10px 0 0 0; font-size: 11px; color: #9ca3af;\">\n      Gerado em {{ $json.relatorio.gerado_em }}\n    </p>\n  </div>\n</div>",
        "options": {}
      },
      "id": "enviar-relatorio",
      "name": "Enviar Relatório",
      "type": "n8n-nodes-base.emailSend",
      "typeVersion": 2.1,
      "position": [900, 300],
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "INSERT INTO communication_log (\n  empresa_id, \n  tipo, \n  canal, \n  destinatario, \n  assunto, \n  status, \n  enviado_em,\n  metadata\n) VALUES (\n  '{{ $json.id }}', \n  'relatorio_mensal', \n  'email', \n  '{{ $json.relatorio.destinatario }}', \n  'Relatório Mensal - {{ $json.nome }}', \n  'enviado', \n  NOW(),\n  '{\"mes_referencia\": \"{{ $json.relatorio.ano_mes }}\", \"regime\": \"{{ $json.regime_tributario }}\"}'\n)",
        "options": {
          "queryBatching": "independently"
        }
      },
      "id": "log-envio",
      "name": "Log de Envio",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 2.6,
      "position": [1120, 300],
      "onError": "continueRegularOutput"
    }
  ],
  "connections": {
    "Trigger Mensal Dia 1": {
      "main": [
        [
          {
            "node": "Buscar Empresas Ativas",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Buscar Empresas Ativas": {
      "main": [
        [
          {
            "node": "Gerar Dados do Relatório",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gerar Dados do Relatório": {
      "main": [
        [
          {
            "node": "Enviar Relatório",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Enviar Relatório": {
      "main": [
        [
          {
            "node": "Log de Envio",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 1,
  "updatedAt": "2025-01-19T15:45:00.000Z",
  "versionId": "1"
}
